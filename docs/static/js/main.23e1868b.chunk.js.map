{"version":3,"sources":["components/Box/index.jsx","App.js","index.js"],"names":["Box","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","key","value","console","log","_this$props","props","num","onClick","isSelected","react_default","a","createElement","className","Component","App","allRandom","howMany","selectedBoxes","winRules","rule1","rule2","rule3","rule4","rule5","rule6","rule7","rule8","rule9","rule10","rule11","rule12","isWin","generateAllRandomNumbers","bind","assertThisInitialized","generateUiBoxes","generateRandomNumber","checkIfNumIsUnique","handleOnBoxClick","checkTheWin","prevProps","prevState","countTrues","map","item","index","alert","i","random","setState","objectSpread","Math","floor","indexOf","push","generateAgain","e","target","textContent","indexOfSelected","parseInt","toConsumableArray","concat","_this2","allBoxes","forEach","components_Box","_this3","length","winrules","winSquence","res","every","window","location","reload","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"wSAsBeA,SAlBf,SAAAC,GACI,SAAAD,IAAa,IAAAE,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACTE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,QACKI,MAAQ,GAFJP,EADjB,OAAAC,OAAAO,EAAA,EAAAP,CAAAH,EAAAC,GAAAE,OAAAQ,EAAA,EAAAR,CAAAH,EAAA,EAAAY,IAAA,SAAAC,MAAA,WAQQC,QAAQC,IAAI,iBADR,IAAAC,EAE+BX,KAAKY,MAAjCC,EAFHF,EAEGE,IAAKC,EAFRH,EAEQG,QAASC,EAFjBJ,EAEiBI,WACrB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWJ,EAAa,aAAa,MAAOD,QAASA,GACrDD,OAZjBlB,EAAA,CAAyByB,cCwKVC,qBAtKb,SAAAA,EAAYT,GAAO,IAAAf,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqB,IACjBxB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuB,GAAAlB,KAAAH,KAAMY,KACDR,MAAQ,CACXkB,UAAW,GACXC,QAAS,GACTC,cAAe,GACfC,SAAU,CAERC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,GACpBC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,GACpBC,MAAO,CAAC,GAAI,GAAI,GAAI,GAAI,IACxBC,MAAO,CAAC,GAAI,GAAI,GAAI,GAAI,IACxBC,MAAO,CAAC,GAAI,GAAI,GAAI,GAAI,IAGxBC,MAAO,CAAC,EAAG,EAAG,GAAI,GAAI,IACtBC,MAAO,CAAC,EAAG,EAAG,GAAI,GAAI,IACtBC,MAAO,CAAC,EAAG,EAAG,GAAI,GAAI,IACtBC,MAAO,CAAC,EAAG,EAAG,GAAI,GAAI,IACtBC,OAAQ,CAAC,EAAG,EAAG,GAAI,GAAI,IAGvBC,OAAQ,CAAC,EAAG,EAAG,GAAI,GAAI,IACvBC,OAAQ,CAAC,EAAG,EAAG,GAAI,GAAI,KAEzBC,MAAO,IAETzC,EAAK0C,yBAA2B1C,EAAK0C,yBAAyBC,KAA9B1C,OAAA2C,EAAA,EAAA3C,QAAA2C,EAAA,EAAA3C,CAAAD,KAChCA,EAAK6C,gBAAkB7C,EAAK6C,gBAAgBF,KAArB1C,OAAA2C,EAAA,EAAA3C,QAAA2C,EAAA,EAAA3C,CAAAD,KACvBA,EAAK8C,qBAAuB9C,EAAK8C,qBAAqBH,KAA1B1C,OAAA2C,EAAA,EAAA3C,QAAA2C,EAAA,EAAA3C,CAAAD,KAC5BA,EAAK+C,mBAAqB/C,EAAK+C,mBAAmBJ,KAAxB1C,OAAA2C,EAAA,EAAA3C,QAAA2C,EAAA,EAAA3C,CAAAD,KAC1BA,EAAKgD,iBAAmBhD,EAAKgD,iBAAiBL,KAAtB1C,OAAA2C,EAAA,EAAA3C,QAAA2C,EAAA,EAAA3C,CAAAD,KACxBA,EAAKiD,YAAcjD,EAAKiD,YAAYN,KAAjB1C,OAAA2C,EAAA,EAAA3C,QAAA2C,EAAA,EAAA3C,CAAAD,KAhCFA,oFAmCjBG,KAAKuC,sEAEYQ,EAAWC,GAGxBhD,KAAKI,MAAMkC,OAASU,EAAUV,OAChCtC,KAAK8C,cAEPrC,QAAQC,IAAI,sBAEZ,IAAIuC,EAAa,EACjBjD,KAAKI,MAAMkC,MAAMY,IAAI,SAACC,EAAMC,IACb,IAATD,GACFF,MAGc,GAAdA,GACFI,MAAM,8DAeR,IAAK,IAAIC,EAAI,EAAGA,GAAKtD,KAAKI,MAAMmB,QAAS+B,IACvC,KAAIC,EAASvD,KAAK2C,qBAAqB3C,KAAKI,MAAMmB,QAAU,GAC7CvB,KAAK4C,mBAAmBW,GAEzCvD,KAAKwD,SAAL1D,OAAA2D,EAAA,EAAA3D,CAAA,GAAmBE,KAAKI,MAAxB,CAA+BmD,yDAEZhC,GACnB,OAAOmC,KAAKC,MAAMD,KAAKH,SAAWhC,GAAW,6CAG5BV,GACjB,IAA2C,IAAvCb,KAAKI,MAAMkB,UAAUsC,QAAQ/C,GAE/B,OADAb,KAAKI,MAAMkB,UAAUuC,KAAKhD,IACnB,EAET,IAAIiD,EAAgB9D,KAAK2C,qBAAqB3C,KAAKI,MAAMmB,SACzDvB,KAAK4C,mBAAmBkB,4CAGTC,GACftD,QAAQC,IAAIqD,EAAEC,OAAOC,aAKrB,IAAIC,EAAkBlE,KAAKI,MAAMkB,UAAUsC,QACzCO,SAASJ,EAAEC,OAAOC,cAEpBjE,KAAKwD,SAAS,CACZhC,cAAc1B,OAAAsE,EAAA,EAAAtE,CAAKE,KAAKI,MAAMoB,eAAjB6C,OAAA,CAAgCH,gDAG/B,IAAAI,EAAAtE,KAChBS,QAAQC,IAAI,mBACZ,IAAI6D,EAAW,GAsBf,OArBAvE,KAAKI,MAAMkB,UAAUkD,QAAQ,SAACrB,EAAMC,IACc,GAA5CkB,EAAKlE,MAAMoB,cAAcoC,QAAQR,GACnCmB,EAASV,KACP7C,EAAAC,EAAAC,cAACuD,EAAD,CACE1D,YAAY,EACZD,QAAS,SAAAiD,GAAC,OAAIO,EAAKzB,iBAAiBkB,IACpClD,IAAKsC,EACL5C,IAAK6C,KAITmB,EAASV,KACP7C,EAAAC,EAAAC,cAACuD,EAAD,CACE1D,YAAY,EACZD,QAAS,SAAAiD,GAAC,OAAIO,EAAKzB,iBAAiBkB,IACpClD,IAAKsC,EACL5C,IAAK6C,OAKNmB,wCAGK,IAAAG,EAAA1E,KAEZ,GADAS,QAAQC,IAAI,cAAeV,KAAKI,MAAMoB,eAClCxB,KAAKI,MAAMoB,cAAcmD,QAAU,EAAG,CACxC,IAAIC,EAAW5E,KAAKI,MAAMqB,SACtBoD,EAAa,GACbC,GAAM,EACV,IAAK,IAAIvE,KAAOqE,EACdE,EAAMF,EAASrE,GAAKwE,MAAM,SAAC5B,EAAMC,GAC/B,OAAgD,IAA5CsB,EAAKtE,MAAMoB,cAAcoC,QAAQT,KAMvC0B,EAAWhB,KAAKiB,GAGlBrE,QAAQC,IAAI,aAAcmE,GACtBA,EAAWF,QAAU,IACvBlE,QAAQC,IAAI,aACZV,KAAKwD,SAAS,CACZlB,MAAWuC,EAANR,8CAQX,OADA5D,QAAQC,IAAI,eAAgBV,KAAKI,MAAMkC,OAErCtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBnB,KAAK0C,oBAEtC1B,EAAAC,EAAAC,cAAA,UAAQJ,QAAS,kBAAMkE,OAAOC,SAASC,WAAvC,wBAjKU9D,cCClB+D,IAASC,OAAOpE,EAAAC,EAAAC,cAACmE,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.23e1868b.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './box.css';\n\n\nexport class Box extends Component {\n    constructor(){\n        super();\n        this.state = {\n        }\n    }\n\n    render(){\n        console.log(\"ui box render\");\n        const {num, onClick, isSelected} = this.props;\n        return(\n            <div className={isSelected ? \"chosen box\":\"box\"} onClick={onClick}>\n                {num}\n            </div>\n        )\n    }\n}\n\nexport default Box;","import React, { Component } from \"react\";\nimport Box from \"./components/Box\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allRandom: [],\n      howMany: 25,\n      selectedBoxes: [],\n      winRules: {\n        //horizontal\n        rule1: [0, 1, 2, 3, 4],\n        rule2: [5, 6, 7, 8, 9],\n        rule3: [10, 11, 12, 13, 14],\n        rule4: [15, 16, 17, 18, 19],\n        rule5: [20, 21, 22, 23, 24],\n\n        //vertical\n        rule6: [0, 5, 10, 15, 20],\n        rule7: [1, 6, 11, 16, 21],\n        rule8: [2, 7, 12, 17, 22],\n        rule9: [3, 8, 13, 18, 23],\n        rule10: [4, 9, 14, 19, 24],\n\n        //diagonal\n        rule11: [0, 6, 12, 18, 24],\n        rule12: [4, 8, 12, 16, 20]\n      },\n      isWin: []\n    };\n    this.generateAllRandomNumbers = this.generateAllRandomNumbers.bind(this);\n    this.generateUiBoxes = this.generateUiBoxes.bind(this);\n    this.generateRandomNumber = this.generateRandomNumber.bind(this);\n    this.checkIfNumIsUnique = this.checkIfNumIsUnique.bind(this);\n    this.handleOnBoxClick = this.handleOnBoxClick.bind(this);\n    this.checkTheWin = this.checkTheWin.bind(this);\n  }\n  componentWillMount() {\n    this.generateAllRandomNumbers();\n  }\n  componentDidUpdate(prevProps, prevState) {\n    // console.log(\"prevState\", this.state.isWin, prevState.isWin);\n    // alert(\"updating\");\n    if (this.state.isWin == prevState.isWin) {\n      this.checkTheWin();\n    }\n    console.log(\"componentDidUpdate\");\n\n    var countTrues = 0;\n    this.state.isWin.map((item, index) => {\n      if (item === true) {\n        countTrues++;\n      }\n    });\n    if (countTrues == 5) {\n      alert(\"you won\");\n    }\n\n  \n  }\n\n  // shouldComponentUpdate(nextProps, nextState){\n  //   console.log(\"shouldComponentUpdate\", nextProps, nextState);\n  //   if(nextState !== this.state)\n  //   return true;\n  // }\n  // shouldComponentUpdate(){\n\n  // }\n  generateAllRandomNumbers() {\n    for (let i = 1; i <= this.state.howMany; i++) {\n      var random = this.generateRandomNumber(this.state.howMany - 1);\n      var isUnique = this.checkIfNumIsUnique(random);\n    }\n    this.setState({ ...this.state, random });\n  }\n  generateRandomNumber(howMany) {\n    return Math.floor(Math.random() * howMany) + 1;\n  }\n\n  checkIfNumIsUnique(num) {\n    if (this.state.allRandom.indexOf(num) === -1) {\n      this.state.allRandom.push(num);\n      return true;\n    }\n    var generateAgain = this.generateRandomNumber(this.state.howMany);\n    this.checkIfNumIsUnique(generateAgain);\n  }\n\n  handleOnBoxClick(e) {\n    console.log(e.target.textContent);\n    // console.log(\n    //   \"index value is \",\n    //   this.state.allRandom.indexOf(parseInt(e.target.textContent))\n    // );\n    var indexOfSelected = this.state.allRandom.indexOf(\n      parseInt(e.target.textContent)\n    );\n    this.setState({\n      selectedBoxes: [...this.state.selectedBoxes, indexOfSelected]\n    });\n  }\n  generateUiBoxes() {\n    console.log(\"generateUiBoxes\");\n    var allBoxes = [];\n    this.state.allRandom.forEach((item, index) => {\n      if (this.state.selectedBoxes.indexOf(index) == -1) {\n        allBoxes.push(\n          <Box\n            isSelected={false}\n            onClick={e => this.handleOnBoxClick(e)}\n            num={item}\n            key={index}\n          />\n        );\n      } else {\n        allBoxes.push(\n          <Box\n            isSelected={true}\n            onClick={e => this.handleOnBoxClick(e)}\n            num={item}\n            key={index}\n          />\n        );\n      }\n    });\n    return allBoxes;\n  }\n\n  checkTheWin() {\n    console.log(\"checkTheWin\", this.state.selectedBoxes);\n    if (this.state.selectedBoxes.length >= 5) {\n      var winrules = this.state.winRules;\n      var winSquence = [];\n      var res = false;\n      for (let key in winrules) {\n        res = winrules[key].every((item, index) => {\n          if (this.state.selectedBoxes.indexOf(item) !== -1) {\n            return true;\n          } else {\n            return false;\n          }\n        });\n        winSquence.push(res);\n      }\n\n      console.log(\"winSquence\", winSquence);\n      if (winSquence.length >= 5) {\n        console.log(\"inside if\");\n        this.setState({\n          isWin: [...winSquence]\n        });\n      }\n    }\n  }\n\n  render() {\n    console.log(\"selected box\", this.state.isWin);\n    return (\n      <div className=\"App\">\n        <div className=\"bingo\">\n          <div className=\"game-wrapper\">{this.generateUiBoxes()}</div>\n        </div>\n        <button onClick={() => window.location.reload()}>Generate new</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}